---
# tasks file for Nginx-LE
    - name: Upgrade system
      apt: upgrade=dist update_cache=yes

    - name: Install nginx
      apt: name=nginx state=latest

    - name: Install letsencrypt
      apt: name=letsencrypt state=latest

    - name: Create letsencrypt directory
      file: name=/var/www/letsencrypt state=directory

    - name: Remove default nginx config
      file: name=/etc/nginx/sites-enabled/default state=absent

    - name: Install system nginx config
      template:
        src: templates/nginx.conf
        dest: /etc/nginx/nginx.conf

    - name: Install nginx site for letsencrypt requests
      template:
        src: templates/http.j2
        dest: /etc/nginx/sites-enabled/http

    - name: Reload nginx to activate letsencrypt site
      service: name=nginx state=reloaded

# для тестового режима дописал --test-cert, после тестов вернуть назад, в тестовом режиме отрабатывает с ошибкой - не перезагружается nginx
    - name: Create letsencrypt certificate
      shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt --email {{ email }} --agree-tos -d {{ domain }} -d www.{{ domain }} -d prometheus.{{ domain }} -d grafana.{{ domain }} -d alertmanager.{{ domain }} -d gitlab.{{ domain }}
      args:
        creates: /etc/letsencrypt/live/{{ domain }}

    - name: Generate dhparams
      shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
      args:
        creates: /etc/nginx/dhparams.pem

    - name: Enabling https
      template:
        src: templates/https.j2
        dest: /etc/nginx/sites-enabled/le

    - name: Adding basic html page
      template:
        src: templates/index.html
        dest: /var/www/index.html

    - name: Reload nginx to activate https
      service: name=nginx state=reloaded

    - name: Add letsencrypt cronjob for cert renewal and reload nginx
      cron:
        name: letsencrypt_renewal
        special_time: weekly
        job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ email }} --agree-tos -d {{ domain }}  -d www.{{ domain }} -d prometheus.{{ domain }} -d grafana.{{ domain }} -d alertmanager.{{ domain }} -d gitlab.{{ domain }} && service nginx reload
